[debug] [2020-03-26T09:52:26.076Z] ----------------------------------------------------------------------
[debug] [2020-03-26T09:52:26.078Z] Command:       /usr/bin/node /usr/local/bin/firebase init
[debug] [2020-03-26T09:52:26.078Z] CLI Version:   7.15.1
[debug] [2020-03-26T09:52:26.078Z] Platform:      linux
[debug] [2020-03-26T09:52:26.078Z] Node Version:  v10.15.2
[debug] [2020-03-26T09:52:26.078Z] Time:          Thu Mar 26 2020 10:52:26 GMT+0100 (Central European Standard Time)
[debug] [2020-03-26T09:52:26.078Z] ----------------------------------------------------------------------
[debug] [2020-03-26T09:52:26.078Z] 
[debug] [2020-03-26T09:52:26.087Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-03-26T09:52:26.087Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /home/patrickflattich/Programming-Workspace/truefitvideo

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[info] i  .firebaserc already has a default project, using truefitvideo.
[debug] [2020-03-26T09:52:39.482Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2020-03-26T09:52:39.482Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2020-03-26T09:52:39.655Z] <<< HTTP RESPONSE 200
[debug] [2020-03-26T09:52:39.662Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/truefitvideo  
 
[debug] [2020-03-26T09:52:40.621Z] <<< HTTP RESPONSE 200
[info] 
=== Database Setup
[info] 
[info] Firebase Realtime Database Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[info] ✔  Database Rules for  have been downloaded to database.rules.json.
[info] Future modifications to database.rules.json will update Database Rules when you run
[info] firebase deploy.
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2020-03-26T09:52:53.965Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-03-26T09:52:53.965Z] > authorizing via signed-in user
[debug] [2020-03-26T09:52:53.965Z] [iam] checking project truefitvideo for permissions ["firebase.projects.get"]
[debug] [2020-03-26T09:52:53.965Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/truefitvideo:testIamPermissions  

[debug] [2020-03-26T09:52:54.897Z] <<< HTTP RESPONSE 200
[debug] [2020-03-26T09:52:54.900Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/truefitvideo/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2020-03-26T09:52:54.901Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/truefitvideo/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2020-03-26T09:52:56.182Z] <<< HTTP RESPONSE 200
[debug] [2020-03-26T09:52:56.184Z] <<< HTTP RESPONSE 200
[info] ✔  Wrote functions/package.json
[info] ✔  Wrote functions/index.js
[info] ✔  Wrote functions/.gitignore
[info] 
=== Storage Setup
[info] 
[info] Firebase Storage Security Rules allow you to define how and when to allow
[info] uploads and downloads. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[info] 
[info] i  Writing configuration info to firebase.json...
[info] i  Writing project information to .firebaserc...
[info] 
[info] ✔  Firebase initialization complete!
